/*
 * PanelSequenceMonitor.java
 *
 * Created on August 27, 2006, 9:19 PM
 */
package edu.mbl.jif.acq.tasking;

import edu.mbl.jif.acq.*;
import edu.mbl.jif.camera.Utils;
import edu.mbl.jif.gui.clock.CountdownClock;
import edu.mbl.jif.utils.StaticSwingUtils;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JProgressBar;
import javax.swing.SwingUtilities;

/**
 * Panel for monitoring a Timed Sequence Task TODO Add Position and perhaps Z progress bars
 *
 * If initialDelay < 0, wait for start button to begin
 *
 * @author GBH
 */
public class PanelTimedSequenceMonitor extends javax.swing.JPanel {

	//TimedSequenceAcqTimerTask sequenceAcqTask;
	TimedSequenceController seqCtrl;
	CountdownClock clock;
	private final int timePoints;
	private final long period;
	private final long initialDelay;
	private int nDone;
	private final int zSections;
	private final int channels;
	private final int positions;

	/**
	 * Creates new form PanelSequenceMonitor TODO - add OnCancellation options, e.g. delete data,
	 * reset whatever.
	 *
	 */
	public PanelTimedSequenceMonitor(int timePoints, long period, long initialDelay,
			TimedSequenceController sequenceCtrl) {
		this(timePoints, period, initialDelay, 1, 1, 1, sequenceCtrl);
	}

	public PanelTimedSequenceMonitor(int timePoints, long period, long initialDelay,
			int channels, int zSections, int positions,
			TimedSequenceController sequenceCtrl) {
		this.initialDelay = initialDelay;
		this.timePoints = timePoints;
		this.period = period;
		this.zSections = zSections;
		this.channels = channels;
		this.positions = positions;
		//
		this.seqCtrl = sequenceCtrl;
		//
		initComponents();
		//
		clock = new CountdownClock();
		//clock.setBounds(15, 15, 75, 75);
		panelClock.add(clock, BorderLayout.CENTER);
		//
		progressBarT.setMaximum(timePoints);
		ProgressBarZ.setMaximum(zSections);
		progressBarC.setMaximum(channels);
		if (positions < 2) {
			labelPositions.setVisible(false);
			progressBarPos.setVisible(false);
		} else {
			progressBarPos.setMaximum(positions);
		}

		//
		buttonStart.setEnabled(this.initialDelay < 0);
		valueTimePoints.setText(String.valueOf(timePoints));
		valuePeriod.setText(String.valueOf(period / 1000));
		if (initialDelay > 0) {
			labelCompleted.setText("Initial delay.  Waiting...");
		}
	}

	public void startSequence() {
		StaticSwingUtils.dispatchToEDT(new Runnable() {
			public void run() {
				buttonStart.setEnabled(false);
				buttonCancel.setEnabled(true);
				buttonClose.setEnabled(false);
                        labelStatus.setText("Running...");
			}

		});
		seqCtrl.startTimer();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      panelClock = new javax.swing.JPanel();
      panelButtons = new javax.swing.JPanel();
      buttonStart = new javax.swing.JButton();
      buttonCancel = new javax.swing.JButton();
      panelTitle = new javax.swing.JPanel();
      labelInterval = new javax.swing.JLabel();
      valuePeriod = new javax.swing.JLabel();
      valueTimePoints = new javax.swing.JLabel();
      labelInterval1 = new javax.swing.JLabel();
      panelStatus = new javax.swing.JPanel();
      progressBarT = new javax.swing.JProgressBar();
      labalBegan = new javax.swing.JLabel();
      labelWillFinish = new javax.swing.JLabel();
      labelToGo = new javax.swing.JLabel();
      labelCompleted = new javax.swing.JLabel();
      progressBarC = new javax.swing.JProgressBar();
      progressBarC.setOrientation(JProgressBar.VERTICAL);
      labelTitle = new javax.swing.JLabel();
      ProgressBarZ = new javax.swing.JProgressBar();
      progressBarC.setOrientation(JProgressBar.VERTICAL);
      progressBarPos = new javax.swing.JProgressBar();
      labelPositions = new javax.swing.JLabel();
      buttonClose = new javax.swing.JButton();
      labelStatus = new javax.swing.JLabel();

      panelClock.setBorder(javax.swing.BorderFactory.createTitledBorder("Next:"));
      panelClock.setMinimumSize(new java.awt.Dimension(90, 90));
      panelClock.setPreferredSize(new java.awt.Dimension(90, 90));

      org.jdesktop.layout.GroupLayout panelClockLayout = new org.jdesktop.layout.GroupLayout(panelClock);
      panelClock.setLayout(panelClockLayout);
      panelClockLayout.setHorizontalGroup(
         panelClockLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(0, 136, Short.MAX_VALUE)
      );
      panelClockLayout.setVerticalGroup(
         panelClockLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(0, 0, Short.MAX_VALUE)
      );

      buttonStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/acq/icons/action_go.gif"))); // NOI18N
      buttonStart.setText(" Start");
      buttonStart.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            StartIt(evt);
         }
      });

      buttonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/acq/icons/cancel.png"))); // NOI18N
      buttonCancel.setText("Cancel");
      buttonCancel.setEnabled(false);
      buttonCancel.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            CancelIt(evt);
         }
      });

      org.jdesktop.layout.GroupLayout panelButtonsLayout = new org.jdesktop.layout.GroupLayout(panelButtons);
      panelButtons.setLayout(panelButtonsLayout);
      panelButtonsLayout.setHorizontalGroup(
         panelButtonsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(org.jdesktop.layout.GroupLayout.TRAILING, panelButtonsLayout.createSequentialGroup()
            .add(buttonStart)
            .add(46, 46, 46)
            .add(buttonCancel)
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      panelButtonsLayout.setVerticalGroup(
         panelButtonsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(panelButtonsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
            .add(buttonStart)
            .add(buttonCancel))
      );

      labelInterval.setText("acquisitions at ");

      valuePeriod.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
      valuePeriod.setText("-");

      valueTimePoints.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      valueTimePoints.setText("-");

      labelInterval1.setText(" sec. intervals");

      org.jdesktop.layout.GroupLayout panelTitleLayout = new org.jdesktop.layout.GroupLayout(panelTitle);
      panelTitle.setLayout(panelTitleLayout);
      panelTitleLayout.setHorizontalGroup(
         panelTitleLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(panelTitleLayout.createSequentialGroup()
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(valueTimePoints, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(labelInterval)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(valuePeriod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
            .add(labelInterval1)
            .add(112, 112, 112))
      );
      panelTitleLayout.setVerticalGroup(
         panelTitleLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(panelTitleLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
            .add(valueTimePoints)
            .add(labelInterval)
            .add(valuePeriod)
            .add(labelInterval1))
      );

      panelStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

      labalBegan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
      labalBegan.setText("Began: 00:00:00");

      labelWillFinish.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
      labelWillFinish.setText("Will finish: 00:00:00");

      labelToGo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
      labelToGo.setText("To Go: 00:00:00");

      labelCompleted.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
      labelCompleted.setForeground(new java.awt.Color(0, 0, 204));
      labelCompleted.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
      labelCompleted.setText("Completed: 000 ");

      org.jdesktop.layout.GroupLayout panelStatusLayout = new org.jdesktop.layout.GroupLayout(panelStatus);
      panelStatus.setLayout(panelStatusLayout);
      panelStatusLayout.setHorizontalGroup(
         panelStatusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(panelStatusLayout.createSequentialGroup()
            .addContainerGap()
            .add(panelStatusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
               .add(progressBarT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 306, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
               .add(org.jdesktop.layout.GroupLayout.TRAILING, panelStatusLayout.createSequentialGroup()
                  .add(labelToGo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .add(labelWillFinish, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
               .add(panelStatusLayout.createSequentialGroup()
                  .add(labalBegan, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                  .add(labelCompleted, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addContainerGap())
      );
      panelStatusLayout.setVerticalGroup(
         panelStatusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(panelStatusLayout.createSequentialGroup()
            .addContainerGap()
            .add(panelStatusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
               .add(labalBegan)
               .add(labelCompleted))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(progressBarT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(panelStatusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
               .add(labelWillFinish)
               .add(labelToGo))
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      labelTitle.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
      labelTitle.setText("Sequence Acquiisition");

      labelPositions.setText("Positions:");

      buttonClose.setText("Close");
      buttonClose.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            closeWindow(evt);
         }
      });

      labelStatus.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
      labelStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

      org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
               .add(layout.createSequentialGroup()
                  .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                     .add(labelTitle)
                     .add(panelStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                     .add(panelTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 330, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                     .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(labelPositions)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(progressBarPos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 250, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                  .add(18, 18, 18)
                  .add(progressBarC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                  .add(ProgressBarZ, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .add(0, 0, Short.MAX_VALUE))
               .add(layout.createSequentialGroup()
                  .add(panelButtons, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                  .add(labelStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
               .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                  .add(buttonClose, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .add(65, 65, 65))
               .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                  .add(panelClock, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .addContainerGap())))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
               .add(panelClock, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
               .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                  .add(labelTitle)
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                  .add(panelTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                  .add(panelStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                  .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                     .add(progressBarPos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                     .add(labelPositions))
                  .add(0, 0, Short.MAX_VALUE))
               .add(progressBarC, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .add(org.jdesktop.layout.GroupLayout.TRAILING, ProgressBarZ, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
               .add(panelButtons, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .add(buttonClose, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .add(labelStatus, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
      );
   }// </editor-fold>//GEN-END:initComponents

    private void CancelIt(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelIt
			clock.cancel();
			seqCtrl.cancel();
			buttonCancel.setEnabled(false);
			String completed = "CANCELLED after " + String.valueOf(nDone) + " time points";
			labelCompleted.setText(completed);
			labelCompleted.setForeground(Color.red);
                  labelStatus.setText("Cancelled");
			buttonClose.setEnabled(true);
			
    }//GEN-LAST:event_CancelIt

    private void StartIt(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartIt
			this.startSequence();
    }//GEN-LAST:event_StartIt

  private void closeWindow(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeWindow
    // Close button pressed, close the containing window...
  }//GEN-LAST:event_closeWindow

	public void allDone() {
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				buttonCancel.setEnabled(false);
				buttonClose.setEnabled(true);
				progressBarT.setValue(timePoints);
				labelCompleted.setFont(new Font("Monospaced", Font.BOLD, 12));
				labelCompleted.setText(
						"Completed " + String.valueOf(timePoints) + " time points");
                        labelStatus.setText("Completed");
				if (clock != null) {
					clock.setDone();
				}
			}

		});
	}

	CountdownClock getClock() {
		return clock;
	}

	public void updateStatus(
			final long beganTime, final long willEndTime, final long toGoTime, final int nDone) {
		updateStatus(beganTime, willEndTime, toGoTime, nDone, 1, 1, 1);
	}

	public void updateStatus(
			final long beganTime, final long willEndTime, final long toGoTime,
			final int nDone, final int channel, final int section, final int position) {
		this.nDone = nDone;
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				labalBegan.setText("Began at: " + Utils.timeFormat(beganTime));
				labelWillFinish.setText("Finish at: " + Utils.timeFormat(willEndTime));
				labelToGo.setText("To Go: " + Utils.durationHhMmSs(toGoTime));
				String completed = " Completed:  "
						+ String.valueOf(nDone) + " / " + String.valueOf(timePoints);
				labelCompleted.setText(completed);
				progressBarT.setValue(nDone);
				progressBarC.setValue(channel);
				ProgressBarZ.setValue(section);
				progressBarPos.setValue(position);
			}

		});
	}

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JProgressBar ProgressBarZ;
   private javax.swing.JButton buttonCancel;
   private javax.swing.JButton buttonClose;
   private javax.swing.JButton buttonStart;
   private javax.swing.JLabel labalBegan;
   private javax.swing.JLabel labelCompleted;
   private javax.swing.JLabel labelInterval;
   private javax.swing.JLabel labelInterval1;
   private javax.swing.JLabel labelPositions;
   private javax.swing.JLabel labelStatus;
   private javax.swing.JLabel labelTitle;
   private javax.swing.JLabel labelToGo;
   private javax.swing.JLabel labelWillFinish;
   private javax.swing.JPanel panelButtons;
   private javax.swing.JPanel panelClock;
   private javax.swing.JPanel panelStatus;
   private javax.swing.JPanel panelTitle;
   private javax.swing.JProgressBar progressBarC;
   private javax.swing.JProgressBar progressBarPos;
   private javax.swing.JProgressBar progressBarT;
   private javax.swing.JLabel valuePeriod;
   private javax.swing.JLabel valueTimePoints;
   // End of variables declaration//GEN-END:variables
}
