/*
 * FrameCamAcqJ.java
 * Created on May 29, 2006, 6:07 PM
 */
package edu.mbl.jif.camacq;

import edu.mbl.jif.camacq.ApplicationFrame;
import com.vlsolutions.swing.docking.DockingDesktop;
import edu.mbl.jif.workframe.ModuleWithGui;
import edu.mbl.jif.workframe.IModule;
import java.awt.BorderLayout;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JToolBar;
import javax.swing.border.Border;
import org.jdesktop.swingx.action.ActionContainerFactory;
import org.jdesktop.swingx.action.ActionManager;

/**
 *
 * @author  GBH
 */
public class ApplicationFrameTabbed extends javax.swing.JFrame implements ApplicationFrame {

    int lastTabIndex = 0;
    private Border contentBorder;

    public ApplicationFrameTabbed(String iconFile) {
        try {
            this.setIconImage(
                (new javax.swing.ImageIcon(getClass().getResource(iconFile))).getImage());
        } catch (Exception ex) {
        }
        this.setTitle("CamAcqJ");
        contentBorder = BorderFactory.createEmptyBorder(6, 8, 6, 8);
        // ----------------------------------------------------------
        initComponents();

        this.setSize(460, 284);
    }

    public void setToolBar(JToolBar toolBar) {
        getContentPane().add(toolBar, 0);
    }

    public void addTool(String name, String iconPath, JPanel panel, String tooltip) {
        jTabbedPane1.addTab("", loadIcon(iconPath), panel, tooltip);
        jTabbedPane1.setBackgroundAt(lastTabIndex, panel.getBackground());
        lastTabIndex++;
    }
    public void addTool(String name, String iconPath, JPanel panel, String tooltip,
                        boolean notCollapsed) {
        addTool(name, iconPath, panel, tooltip);
    }

    public void setToolBar(List actions) {
        JToolBar toolBar = new ActionContainerFactory(ActionManager.getInstance()).createToolBar(actions);
        setToolBar(toolBar);
    }
    
    public void addTab(String name, Icon icon, JPanel panel, String tooltip) {
        jTabbedPane1.addTab("", icon, panel, tooltip);
        jTabbedPane1.setBackgroundAt(lastTabIndex, panel.getBackground());
        lastTabIndex++;
    }

    public void addTab(ModuleWithGui module) {
        java.awt.Container panel = module.getPanel();
        if (panel != null) {
            jTabbedPane1.addTab("",
                module.getIcon(),
                module.getPanel(),
                module.getName());
            jTabbedPane1.setBackgroundAt(lastTabIndex, panel.getBackground());
            lastTabIndex++;
        }
    }

    public Icon loadIcon(String path) {
        return (Icon) new javax.swing.ImageIcon(getClass().getResource(path));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(5, 200));
        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    public void addBox(String name, JComponent comp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }



    @Override
    public DockingDesktop getDesk() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setup() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

}
