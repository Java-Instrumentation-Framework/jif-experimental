/*
 * CompensatorSettingPanel.java
 *
 * Created on February 11, 2007, 4:27 PM
 */
package edu.mbl.jif.varilc;

import com.jgoodies.binding.adapter.BasicComponentFactory;
import com.jgoodies.binding.adapter.SpinnerAdapterFactory;
import com.jgoodies.binding.value.ConverterFactory;
import com.jgoodies.binding.value.ValueModel;
import edu.mbl.jif.utils.color.JifColor;
import java.text.DecimalFormat;
import javax.swing.ButtonGroup;

/**
 *
 * @author GBH
 */
public class CompensatorSettingPanel
		extends javax.swing.JPanel {

	/**
	 * Creates new form CompensatorSettingPanel
	 */
	VariLCModel vlcm;
	VLCController vlcCtrl;
	VLCMeasurer vlcMeasurer;
	ButtonGroup group;
	ValueModel a;
	ValueModel b;
	ValueModel i;
	private int settingNumber;
	double stepSize = 0.001;

	public CompensatorSettingPanel() {
	}

	public CompensatorSettingPanel(VariLCModel vlcm,
			VLCController vlcCtrl,
			VLCMeasurer vlcMeasurer,
			int settingNumber,
			ValueModel a, ValueModel b, ValueModel i,
			ButtonGroup group) {

		this.vlcm = vlcm;
		this.vlcCtrl = vlcCtrl;
		this.vlcMeasurer = vlcMeasurer;
		this.settingNumber = settingNumber;
		this.a = a;
		this.b = b;
		this.i = i;
		this.group = group;

		initComponents();
		this.setBackground(JifColor.yellow[2]);

		double valueA = ((Double) a.getValue()).doubleValue();
		if (valueA < vlcm.getMinA()) {
			a.setValue(vlcm.getMinA());
		}
		if (valueA > vlcm.getMaxA()) {
			a.setValue(vlcm.getMaxA());
		}
		// attach spinnerA to value model a
		spinnerA.setModel(SpinnerAdapterFactory.createNumberAdapter(
				a,
				((Double) a.getValue()).doubleValue(), // defaultValue
				vlcm.getMinA(), vlcm.getMaxA(),
				stepSize)); // step

		// attach spinnerB to value model b
		double valueB = ((Double) b.getValue()).doubleValue();
		if (valueB < vlcm.getMinB()) {
			b.setValue(vlcm.getMinB());
		}
		if (valueB > vlcm.getMaxB()) {
			b.setValue(vlcm.getMaxB());
		}
		spinnerB.setModel(SpinnerAdapterFactory.createNumberAdapter(
				b,
				((Double) b.getValue()).doubleValue(), // defaultValue
				vlcm.getMinB(), vlcm.getMaxB(),
				stepSize)); // step
		toggleButton.setText(String.valueOf(settingNumber));
		group.add(toggleButton);
		spinnerA.setEnabled(false);
		spinnerB.setEnabled(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    toggleButton = new javax.swing.JToggleButton();
    spinnerA = new javax.swing.JSpinner();
    spinnerB = new javax.swing.JSpinner();
    valueIntensity = BasicComponentFactory.createLabel(ConverterFactory.createStringConverter(i, new DecimalFormat("##0.0")));

    setOpaque(false);

    toggleButton.setText("X");
    toggleButton.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        toggleButtonItemStateChanged(evt);
      }
    });

    valueIntensity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    valueIntensity.setText("000");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(toggleButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(spinnerA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(spinnerB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(valueIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
        .addComponent(toggleButton)
        .addComponent(spinnerA, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(spinnerB, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(valueIntensity))
    );
  }// </editor-fold>//GEN-END:initComponents

    private void toggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_toggleButtonItemStateChanged
		if (toggleButton.isSelected()) {
			// selects this setting, measures intensity and
			spinnerA.setEnabled(true);
			spinnerB.setEnabled(true);
			// measureIntensity
			vlcMeasurer.setElementAndMeasure(settingNumber);
		} else {
			//disables spinners
			spinnerA.setEnabled(false);
			spinnerB.setEnabled(false);
		}
    }//GEN-LAST:event_toggleButtonItemStateChanged

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JSpinner spinnerA;
  private javax.swing.JSpinner spinnerB;
  private javax.swing.JToggleButton toggleButton;
  private javax.swing.JLabel valueIntensity;
  // End of variables declaration//GEN-END:variables
}
