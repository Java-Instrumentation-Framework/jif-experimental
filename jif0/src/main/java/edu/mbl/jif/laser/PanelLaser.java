/*
 * PanelLaser.java
 *
 * Created on June 18, 2008, 12:35 PM
 */
package edu.mbl.jif.laser;

import com.jgoodies.binding.adapter.SpinnerAdapterFactory;
import com.jgoodies.binding.beans.PropertyAdapter;
import edu.mbl.jif.camacq.InstrumentController;
import edu.mbl.jif.config.DeviceManager;
import edu.mbl.jif.device.SerialDevice;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.SwingUtilities;

/**
 *
 * @author  GBH
 */
public class PanelLaser
        extends javax.swing.JPanel {

  InstrumentController instrumentCtrl;
  int count = 0;
      SurgeonModel surg;

  /** Creates new form PanelLaser */
  public PanelLaser() {
    initComponents();
  }

  public PanelLaser(Surgeon surg) {
    //setSurgeon(surg);
    initComponents();
  }

  public PanelLaser(InstrumentController ctrl) {
    this.instrumentCtrl = ctrl;
    //Surgeon surg = (Surgeon) ctrl.getController("surgeon");
    surg = (SurgeonModel) ctrl.getModel("surgeon");
    //setSurgeon(surg);
    initComponents();
    spinFreq.setModel(SpinnerAdapterFactory.createNumberAdapter(new PropertyAdapter(
            surg, SurgeonModel.PROPERTYNAME_PULSEFREQ, true),
            surg.getPulseFreq(), // defaultValue
            1.0, 1000000.0, 10.0));
    spinPulses.setModel(SpinnerAdapterFactory.createNumberAdapter(new PropertyAdapter(
            surg, SurgeonModel.PROPERTYNAME_NUMBERPULSES, true),
            surg.getNumberPulses(), // defaultValue
            1.0, 1000000.0, 10.0));
  }
//  Surgeon surgeon;
//  public static final String PROP_SURGEON = "surgeon";

//  public void setSurgeon(Surgeon surg) {
//    Surgeon oldbean = surg;
//    this.surgeon = surg;
//    propertyChangeSupport.firePropertyChange(PROP_SURGEON, oldbean, surg);
//  }

//  public Surgeon getSurgeon() {
//    return surgeon;
//  }

// <editor-fold defaultstate="collapsed" desc=" propertyChangeSupport ">
//  private java.beans.PropertyChangeSupport propertyChangeSupport = new java.beans.PropertyChangeSupport(this);
//
//  @Override
//  public void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
//    if (propertyChangeSupport != null) {
//      propertyChangeSupport.addPropertyChangeListener(listener);
//    } else {
//      super.addPropertyChangeListener(listener);
//    }
//  }
//
//  @Override
//  public void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
//    propertyChangeSupport.removePropertyChangeListener(listener);
//  }

// </editor-fold>
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel2 = new javax.swing.JPanel();
    buttonFire = new javax.swing.JButton();
    jPanel3 = new javax.swing.JPanel();
    buttonClearHistory = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    textAreaRecord = new javax.swing.JTextArea();
    jPanel4 = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    spinFreq = new javax.swing.JSpinner();
    jLabel3 = new javax.swing.JLabel();
    spinPulses = new javax.swing.JSpinner();
    buttonUpdate = new javax.swing.JButton();
    jToggleButton1 = new javax.swing.JToggleButton();
    buttonMonitor = new javax.swing.JButton();

    setBackground(new java.awt.Color(255, 255, 204));

    jPanel2.setOpaque(false);

    buttonFire.setBackground(new java.awt.Color(224, 135, 120));
    buttonFire.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    buttonFire.setForeground(new java.awt.Color(255, 255, 255));
    buttonFire.setText("Fire");
    buttonFire.setMargin(new java.awt.Insets(2, 20, 2, 20));
    buttonFire.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonFireActionPerformed(evt);
      }
    });

    jPanel3.setOpaque(false);

    buttonClearHistory.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
    buttonClearHistory.setText("clear");
    buttonClearHistory.setToolTipText("clear history");
    buttonClearHistory.setMargin(new java.awt.Insets(2, 4, 2, 4));
    buttonClearHistory.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonClearHistoryActionPerformed(evt);
      }
    });

    jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

    textAreaRecord.setColumns(20);
    textAreaRecord.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
    textAreaRecord.setRows(5);
    jScrollPane1.setViewportView(textAreaRecord);

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addGap(2, 2, 2)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(buttonClearHistory)
        .addContainerGap(18, Short.MAX_VALUE))
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(buttonClearHistory)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
    );

    jPanel4.setOpaque(false);
    jPanel4.setLayout(new java.awt.GridLayout(2, 2, 4, 0));

    jLabel2.setText("Pulse freq (Hz)");
    jPanel4.add(jLabel2);

    spinFreq.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
    spinFreq.setOpaque(false);
    jPanel4.add(spinFreq);

    jLabel3.setText("Pulses per point");
    jPanel4.add(jLabel3);

    spinPulses.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(0L), null, null, Long.valueOf(1L)));
    spinPulses.setOpaque(false);
    jPanel4.add(spinPulses);

    buttonUpdate.setText("Update");
    buttonUpdate.setMargin(new java.awt.Insets(2, 4, 2, 4));
    buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonUpdateActionPerformed(evt);
      }
    });

    jToggleButton1.setText("Continuous");
    jToggleButton1.setMargin(new java.awt.Insets(2, 4, 2, 4));

    buttonMonitor.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
    buttonMonitor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/camera/icons/usb16.png"))); // NOI18N
    buttonMonitor.setToolTipText("Monitor serial device I/O");
    buttonMonitor.setMargin(new java.awt.Insets(2, 4, 2, 4));
    buttonMonitor.setMaximumSize(new java.awt.Dimension(20, 20));
    buttonMonitor.setMinimumSize(new java.awt.Dimension(20, 20));
    buttonMonitor.setPreferredSize(new java.awt.Dimension(22, 22));
    buttonMonitor.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonMonitorActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(buttonUpdate)
            .addGap(18, 18, 18)
            .addComponent(buttonFire))
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(buttonMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jToggleButton1))))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(buttonUpdate)
            .addComponent(buttonFire))
          .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addComponent(jToggleButton1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(buttonMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
  }// </editor-fold>//GEN-END:initComponents

    private void buttonFireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFireActionPerformed
        SwingUtilities.invokeLater(new Runnable() {
          public void run() {
            surg.laserTestFire(true);
            recordFiring();
            count++;
          }
        });
}//GEN-LAST:event_buttonFireActionPerformed

private void buttonClearHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearHistoryActionPerformed
  textAreaRecord.setText("");
}//GEN-LAST:event_buttonClearHistoryActionPerformed

private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
  SwingUtilities.invokeLater(new Runnable() {

    public void run() {
      surg.laserUpdate();
    }
  });
}//GEN-LAST:event_buttonUpdateActionPerformed

private void buttonMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMonitorActionPerformed
     SerialDevice device = (SerialDevice) DeviceManager.INSTANCE.getDevice("BurstGenerator");
//     if(device!=null)
// TODO        device.openMonitor();
}//GEN-LAST:event_buttonMonitorActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonClearHistory;
  private javax.swing.JButton buttonFire;
  private javax.swing.JButton buttonMonitor;
  private javax.swing.JButton buttonUpdate;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JToggleButton jToggleButton1;
  private javax.swing.JSpinner spinFreq;
  private javax.swing.JSpinner spinPulses;
  private javax.swing.JTextArea textAreaRecord;
  // End of variables declaration//GEN-END:variables

  private void recordFiring() {
    String s = "Fired: " + timeStamp() + "\n";
    this.textAreaRecord.append(s);
  }

  public static String timeStamp() {
    SimpleDateFormat formatter =
            new SimpleDateFormat("HH:mm:ss.SS", Locale.getDefault());
    Date currentDate = new Date();
    String dateStr = formatter.format(currentDate);
    return dateStr;
  }
}
