/*
 * PanelPath.java
 *
 * Created on February 9, 2008, 10:36 AM
 */
package edu.mbl.jif.laser;

import edu.mbl.jif.camacq.InstrumentController;
import edu.mbl.jif.laser.Surgeon;
import edu.mbl.jif.laser.PathWalker.PathWalkerTask;
import java.awt.geom.Point2D;
import java.text.DecimalFormat;
import javax.swing.SwingUtilities;

/**
 *
 * @author  GBH
 */
public class PanelPath
        extends javax.swing.JPanel {

    InstrumentController instrumentCtrl;
    PathWalkerTask pwTask;

    /** Creates new form PanelPath */
    public PanelPath() {
        initComponents();
//        spinLength.setModel(SpinnerAdapterFactory.createNumberAdapter(new PropertyAdapter(
//                    surgModel, __Model.PROPERTYNAME_XX, true),
//                    __Model.get__(),   // defaultValue
//                    __Model.get__Min(),
//                    __Model.get__Max(),
//                    1.0)); // step
//        spin__.setModel(SpinnerAdapterFactory.createNumberAdapter(new PropertyAdapter(
//                    __Model, __Model.PROPERTYNAME_XX, true),
//                    __Model.get__(),   // defaultValue
//                    __Model.get__Min(),
//                    __Model.get__Max(),
//                    1.0)); // step
    }

    public PanelPath(Surgeon surg) {
        setSurgeon(surg);
        initComponents();
    }

    public PanelPath(InstrumentController instrumentCtrl) {
        this.instrumentCtrl = instrumentCtrl;
        Surgeon surg = (Surgeon) instrumentCtrl.getController("surgeon");
        SurgeonModel surgModel = (SurgeonModel) instrumentCtrl.getModel("surgeon");
        setSurgeon(surg);
        initComponents();
    }
    //
    Surgeon surgeon;
    public static final String PROP_SURGEON = "surgeon";

    public void setSurgeon(Surgeon surg) {
        Surgeon oldbean = surg;
        this.surgeon = surg;
        propertyChangeSupport.firePropertyChange(PROP_SURGEON, oldbean, surg);
    }

    public Surgeon getSurgeon() {
        return surgeon;
    }
    public static final DecimalFormat dec3 = new DecimalFormat("0.000");

    public void setXYDuringPathwalk(Point2D point) {
        valueX.setText("X: " + dec3.format(point.getX()));
        valueY.setText("Y: " + dec3.format(point.getY()));
    }

// <editor-fold defaultstate="collapsed" desc=" propertyChangeSupport ">
    //
    private java.beans.PropertyChangeSupport propertyChangeSupport = new java.beans.PropertyChangeSupport(this);

    @Override
    public void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
        if (propertyChangeSupport != null) {
            propertyChangeSupport.addPropertyChangeListener(listener);
        } else {
            super.addPropertyChangeListener(listener);
        }
    }

    @Override
    public void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
        propertyChangeSupport.removePropertyChangeListener(listener);
    }
// </editor-fold>

    public void showPathOnDisplay() {
//        if (instrumentCtrl == null) {
//            return;
//        }
//        DisplayLiveCamera fid = instrumentCtrl.getDisplayLive();
//        if (fid == null) {
//            return;
//        }
//        GraphicOverlay overlay1 = new GraphicOverlay() {
//
//            public void drawGraphicOverlay(ZoomGraphics zg) {
////                zg.setColor(Color.green);
////                for (int i = 0; i < retarderROIs.length; i++) {
////                    drawArect(zg,retarderROIs[i]);
////                }
////            }
////
////            public void drawArect(ZoomGraphics zg, Rectangle rect) {
////                zg.drawRect(rect.getX(), rect.getY(),rect.getWidth(),rect.getHeight());
////            }
//            }
//
//        };
//        fid.getImageDisplayPanel().imagePane.addGraphicOverlay(overlay1);
    }

    public void setPathWalkerTask(PathWalkerTask pwTask) {
        this.pwTask = pwTask;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

    jPanel2 = new javax.swing.JPanel();
    jLabel5 = new javax.swing.JLabel();
    spinBeginX = new javax.swing.JSpinner();
    jLabel6 = new javax.swing.JLabel();
    spinBeginY = new javax.swing.JSpinner();
    jPanel1 = new javax.swing.JPanel();
    jLabel7 = new javax.swing.JLabel();
    spinLength = new javax.swing.JSpinner();
    jLabel10 = new javax.swing.JLabel();
    spinAngle = new javax.swing.JSpinner();
    jPanel3 = new javax.swing.JPanel();
    buttonApproach = new javax.swing.JButton();
    buttonPreview = new javax.swing.JButton();
    buttonBurn = new javax.swing.JButton();
    buttonCancel = new javax.swing.JButton();
    buttonMarkBegin = new javax.swing.JButton();
    jPanel4 = new javax.swing.JPanel();
    jLabel4 = new javax.swing.JLabel();
    spinStepSize = new javax.swing.JSpinner();
    jLabel8 = new javax.swing.JLabel();
    spinDelay = new javax.swing.JSpinner();
    jLabel1 = new javax.swing.JLabel();
    spinBacklash = new javax.swing.JSpinner();
    panelPosition = new javax.swing.JPanel();
    valueX = new javax.swing.JLabel();
    valueY = new javax.swing.JLabel();

    setBackground(new java.awt.Color(220, 222, 191));

    jPanel2.setOpaque(false);
    jPanel2.setLayout(new java.awt.GridLayout(2, 2, 2, 2));

    jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel5.setText("X");
    jPanel2.add(jLabel5);

    spinBeginX.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(0.01d)));

    org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${surgeon.beginX}"), spinBeginX, org.jdesktop.beansbinding.BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

    jPanel2.add(spinBeginX);

    jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel6.setText("Y");
    jPanel2.add(jLabel6);

    spinBeginY.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(0.01d)));

    binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${surgeon.beginY}"), spinBeginY, org.jdesktop.beansbinding.BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

    jPanel2.add(spinBeginY);

    jPanel1.setOpaque(false);
    jPanel1.setLayout(new java.awt.GridLayout(2, 2, 2, 2));

    jLabel7.setText("Length");
    jPanel1.add(jLabel7);

    spinLength.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(0.0010d)));
    spinLength.setEditor(new javax.swing.JSpinner.NumberEditor(spinLength, "0.000"));

    binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${surgeon.pathLength}"), spinLength, org.jdesktop.beansbinding.BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

    jPanel1.add(spinLength);

    jLabel10.setText("Angle");
    jPanel1.add(jLabel10);

    spinAngle.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
    spinAngle.setEditor(new javax.swing.JSpinner.NumberEditor(spinAngle, "##"));

    binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${surgeon.pathAngle}"), spinAngle, org.jdesktop.beansbinding.BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

    jPanel1.add(spinAngle);

    jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

    buttonApproach.setText("Approach");
    buttonApproach.setMargin(new java.awt.Insets(2, 4, 2, 4));
    buttonApproach.setMaximumSize(new java.awt.Dimension(65, 23));
    buttonApproach.setMinimumSize(new java.awt.Dimension(65, 23));
    buttonApproach.setPreferredSize(new java.awt.Dimension(65, 23));
    buttonApproach.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonApproachActionPerformed(evt);
      }
    });
    jPanel3.add(buttonApproach);

    buttonPreview.setBackground(new java.awt.Color(204, 204, 255));
    buttonPreview.setText("Preview");
    buttonPreview.setMargin(new java.awt.Insets(2, 4, 2, 4));
    buttonPreview.setMaximumSize(new java.awt.Dimension(65, 23));
    buttonPreview.setMinimumSize(new java.awt.Dimension(65, 23));
    buttonPreview.setPreferredSize(new java.awt.Dimension(65, 23));
    buttonPreview.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonPreviewActionPerformed(evt);
      }
    });
    jPanel3.add(buttonPreview);

    buttonBurn.setBackground(new java.awt.Color(255, 102, 102));
    buttonBurn.setText("Burn");
    buttonBurn.setToolTipText("Burn Baby, Burn!");
    buttonBurn.setMaximumSize(new java.awt.Dimension(65, 23));
    buttonBurn.setPreferredSize(new java.awt.Dimension(65, 23));
    buttonBurn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonBurnActionPerformed(evt);
      }
    });
    jPanel3.add(buttonBurn);

    buttonCancel.setText("Cancel");
    buttonCancel.setToolTipText("Cancel the current operation");
    buttonCancel.setEnabled(false);
    buttonCancel.setMargin(new java.awt.Insets(2, 4, 2, 4));
    buttonCancel.setMaximumSize(new java.awt.Dimension(65, 23));
    buttonCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonCancelActionPerformed(evt);
      }
    });
    jPanel3.add(buttonCancel);

    buttonMarkBegin.setBackground(new java.awt.Color(255, 255, 204));
    buttonMarkBegin.setText("MarkBegin");
    buttonMarkBegin.setMargin(new java.awt.Insets(2, 4, 2, 4));
    buttonMarkBegin.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonMarkBeginActionPerformed(evt);
      }
    });

    jPanel4.setOpaque(false);
    jPanel4.setLayout(new java.awt.GridLayout(3, 2, 2, 2));

    jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10));
    jLabel4.setText("Step Size (um)");
    jPanel4.add(jLabel4);

    spinStepSize.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(0.1d)));
    spinStepSize.setEditor(new javax.swing.JSpinner.NumberEditor(spinStepSize, ""));

    binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${surgeon.pathIncrement}"), spinStepSize, org.jdesktop.beansbinding.BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

    jPanel4.add(spinStepSize);

    jLabel8.setFont(new java.awt.Font("Tahoma", 0, 10));
    jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel8.setText("Delay (msec)");
    jPanel4.add(jLabel8);

    spinDelay.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
    spinDelay.setEditor(new javax.swing.JSpinner.NumberEditor(spinDelay, "##.#"));

    binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${surgeon.delayBetweenPoints}"), spinDelay, org.jdesktop.beansbinding.BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

    jPanel4.add(spinDelay);

    jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10));
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel1.setText("Backlash");
    jPanel4.add(jLabel1);

    spinBacklash.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(0.01d)));
    spinBacklash.setEditor(new javax.swing.JSpinner.NumberEditor(spinBacklash, "0.000"));

    binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${surgeon.backlashDistance}"), spinBacklash, org.jdesktop.beansbinding.BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

    jPanel4.add(spinBacklash);

    panelPosition.setOpaque(false);
    panelPosition.setLayout(new java.awt.GridLayout(2, 1, 2, 2));

    valueX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    valueX.setText("-");
    panelPosition.add(valueX);

    valueY.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    valueY.setText("-");
    panelPosition.add(valueY);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(2, 2, 2)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(8, 8, 8)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(buttonMarkBegin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createSequentialGroup()
            .addGap(20, 20, 20)
            .addComponent(panelPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(19, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(10, 10, 10)
        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createSequentialGroup()
        .addComponent(buttonMarkBegin, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(layout.createSequentialGroup()
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(12, 12, 12)
        .addComponent(panelPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    bindingGroup.bind();
  }// </editor-fold>//GEN-END:initComponents

private void buttonBurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBurnActionPerformed
    getSurgeon().burn(this);
}//GEN-LAST:event_buttonBurnActionPerformed
    public void setButtonsEnabled(final boolean b) {
        buttonBurn.setEnabled(b);
        buttonPreview.setEnabled(b);
        buttonMarkBegin.setEnabled(b);
        buttonApproach.setEnabled(b);
        buttonCancel.setEnabled(!b);
    }

private void buttonPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPreviewActionPerformed
    getSurgeon().preview(this);
}//GEN-LAST:event_buttonPreviewActionPerformed

private void buttonApproachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonApproachActionPerformed
    getSurgeon().doApproach(this);
}//GEN-LAST:event_buttonApproachActionPerformed

private void buttonMarkBeginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMarkBeginActionPerformed
    getSurgeon().markBegin();
}//GEN-LAST:event_buttonMarkBeginActionPerformed

private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
    if (pwTask != null) {
        pwTask.cancel(true);
    }
}//GEN-LAST:event_buttonCancelActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonApproach;
  private javax.swing.JButton buttonBurn;
  private javax.swing.JButton buttonCancel;
  private javax.swing.JButton buttonMarkBegin;
  private javax.swing.JButton buttonPreview;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel panelPosition;
  private javax.swing.JSpinner spinAngle;
  private javax.swing.JSpinner spinBacklash;
  private javax.swing.JSpinner spinBeginX;
  private javax.swing.JSpinner spinBeginY;
  private javax.swing.JSpinner spinDelay;
  private javax.swing.JSpinner spinLength;
  private javax.swing.JSpinner spinStepSize;
  private javax.swing.JLabel valueX;
  private javax.swing.JLabel valueY;
  private org.jdesktop.beansbinding.BindingGroup bindingGroup;
  // End of variables declaration//GEN-END:variables
}
