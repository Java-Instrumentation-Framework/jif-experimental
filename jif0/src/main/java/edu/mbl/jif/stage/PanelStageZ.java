/*
 * PanelStageZ.java
 *
 * Created on May 29, 2006, 9:21 AM
 */
package edu.mbl.jif.stage;

import com.jgoodies.binding.PresentationModel;
import com.jgoodies.binding.adapter.BasicComponentFactory;
import com.jgoodies.binding.adapter.SpinnerAdapterFactory;
import com.jgoodies.binding.beans.PropertyAdapter;
import com.jgoodies.binding.value.ConverterFactory;
import edu.mbl.jif.camacq.InstrumentController;
import edu.mbl.jif.gui.dialog.DialogOk;
import edu.mbl.jif.gui.util.StaticSwingUtils;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import javax.swing.AbstractAction;
import javax.swing.KeyStroke;

/**
 *
 * @author  GBH
 */
public class PanelStageZ extends javax.swing.JPanel {

  InstrumentController instCtrl;
  StageZModel zModel;
  PresentationModel pm;

  public PanelStageZ(InstrumentController instCtrl) {
    this.instCtrl = instCtrl;
    zModel = (StageZModel) instCtrl.getModel("zstage");
    pm = new PresentationModel(zModel);
    initComponents();

    spinMoveIncrement.setModel(SpinnerAdapterFactory.createNumberAdapter(
            new PropertyAdapter(
            zModel, StageZModel.PROPERTYNAME_MOVEINCREMENT, true),
            zModel.getMoveIncrement(), 0.1, 100.0, 1.0));

    spinIncrement.setModel(SpinnerAdapterFactory.createNumberAdapter(
            new PropertyAdapter(
            zModel, StageZModel.PROPERTYNAME_INCREMENT, true),
            zModel.getIncrement(), 0.1, 100.0, 1.0));

    spinSections.setModel(SpinnerAdapterFactory.createNumberAdapter(
            new PropertyAdapter(
            zModel, StageZModel.PROPERTYNAME_SECTIONS, true),
            zModel.getSections(), 1, 1000, 1));

    buttonUp1.setText("");
    buttonUp10.setText("");
    buttonDown1.setText("");
    buttonDown10.setText("");
    buttonGoBottom.setText("");
    buttonGoTop.setText("");
    buttonGoRest.setText("");
    buttonHelp.setText("");
    buttonMarkBottom.setText("");
    buttonMarkTop.setText("");
    buttonMarkRest.setText("");
    buttonZeroSet.setText("");
    buttonPrefs.setText("");
  }

  /** Creates new form PanelStageZ */
  public PanelStageZ() {
    initComponents();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    panelMove = new javax.swing.JPanel();
    buttonUp10 = new javax.swing.JButton();
    buttonUp1 = new javax.swing.JButton();
    buttonZeroSet = new javax.swing.JButton();
    buttonDown1 = new javax.swing.JButton();
    buttonDown10 = new javax.swing.JButton();
    buttonHelp = new javax.swing.JButton();
    panelSeries = new javax.swing.JPanel();
    panelMark = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    buttonMarkTop = new javax.swing.JButton();
    buttonMarkRest = new javax.swing.JButton();
    buttonMarkBottom = new javax.swing.JButton();
    panelValues = new javax.swing.JPanel();
    valueTop = BasicComponentFactory.createLabel(
      ConverterFactory.createStringConverter(
        pm.getModel(StageZModel.PROPERTYNAME_RANGETOP), new DecimalFormat("#0.00")));
    valueRest = BasicComponentFactory.createLabel(
      ConverterFactory.createStringConverter(
        pm.getModel(StageZModel.PROPERTYNAME_RESTPOSITION), new DecimalFormat("#0.00")));
    valueBottom = BasicComponentFactory.createLabel(
      ConverterFactory.createStringConverter(
        pm.getModel(StageZModel.PROPERTYNAME_RANGEBOTTOM), new DecimalFormat("#0.00")));
    panelMoveTo = new javax.swing.JPanel();
    jLabel3 = new javax.swing.JLabel();
    buttonGoTop = new javax.swing.JButton();
    buttonGoRest = new javax.swing.JButton();
    buttonGoBottom = new javax.swing.JButton();
    jPanel1 = new javax.swing.JPanel();
    valueRange = BasicComponentFactory.createLabel(ConverterFactory.createStringConverter(pm.getModel(StageZModel.PROPERTYNAME_RANGE), new DecimalFormat("#0.00")));
    labelScanDirection = new javax.swing.JLabel();
    panelSections = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    spinSections = new javax.swing.JSpinner();
    jLabel5 = new javax.swing.JLabel();
    spinIncrement = new javax.swing.JSpinner();
    buttonPreview = new javax.swing.JButton();
    buttonPrefs = new javax.swing.JButton();
    jLabel6 = new javax.swing.JLabel();
    spinMoveIncrement = new javax.swing.JSpinner();
    buttonTest = new javax.swing.JButton();
    buttonTest1 = new javax.swing.JButton();
    labelPosition = BasicComponentFactory.createLabel(
      ConverterFactory.createStringConverter(
        pm.getModel(StageZModel.PROPERTYNAME_POSITION), new DecimalFormat("#0.00")));
    ;
    jLabel4 = new javax.swing.JLabel();

    setBackground(new java.awt.Color(220, 222, 191));
    setMaximumSize(new java.awt.Dimension(390, 135));
    setMinimumSize(new java.awt.Dimension(390, 135));
    setPreferredSize(new java.awt.Dimension(390, 135));

    panelMove.setMinimumSize(new java.awt.Dimension(34, 136));
    panelMove.setOpaque(false);
    panelMove.setPreferredSize(new java.awt.Dimension(36, 136));
    panelMove.setLayout(new javax.swing.BoxLayout(panelMove, javax.swing.BoxLayout.Y_AXIS));

    buttonUp10.setAction(new Up10Action());
    buttonUp10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/up10.gif"))); // NOI18N
    buttonUp10.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMove.add(buttonUp10);

    buttonUp1.setAction(new UpAction());
    buttonUp1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/up1.gif"))); // NOI18N
    buttonUp1.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMove.add(buttonUp1);

    buttonZeroSet.setAction(new GoToZeroAction());
    buttonZeroSet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/moveToZero.gif"))); // NOI18N
    buttonZeroSet.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMove.add(buttonZeroSet);

    buttonDown1.setAction(new DownAction());
    buttonDown1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/dn1.gif"))); // NOI18N
    buttonDown1.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMove.add(buttonDown1);

    buttonDown10.setAction(new Down10Action());
    buttonDown10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/dn10.gif"))); // NOI18N
    buttonDown10.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMove.add(buttonDown10);

    buttonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/camera/icons/information.png"))); // NOI18N
    buttonHelp.setToolTipText("Help information");
    buttonHelp.setMargin(new java.awt.Insets(0, 0, 0, 0));
    buttonHelp.setMaximumSize(new java.awt.Dimension(24, 24));
    buttonHelp.setMinimumSize(new java.awt.Dimension(24, 24));
    buttonHelp.setPreferredSize(new java.awt.Dimension(24, 24));

    panelSeries.setBackground(new java.awt.Color(203, 205, 172));
    panelSeries.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    panelSeries.setLayout(new javax.swing.BoxLayout(panelSeries, javax.swing.BoxLayout.X_AXIS));

    panelMark.setOpaque(false);
    panelMark.setLayout(new javax.swing.BoxLayout(panelMark, javax.swing.BoxLayout.Y_AXIS));

    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel2.setText("  Set");
    panelMark.add(jLabel2);

    buttonMarkTop.setAction(new SetTopAction()   );
    buttonMarkTop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/setTop.gif"))); // NOI18N
    buttonMarkTop.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMark.add(buttonMarkTop);

    buttonMarkRest.setAction(new SetRestPointAction());
    buttonMarkRest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/setZero.gif"))); // NOI18N
    buttonMarkRest.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMark.add(buttonMarkRest);

    buttonMarkBottom.setAction(new SetBottomAction());
    buttonMarkBottom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/setBottom.gif"))); // NOI18N
    buttonMarkBottom.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMark.add(buttonMarkBottom);

    panelSeries.add(panelMark);

    panelValues.setMaximumSize(new java.awt.Dimension(32767, 90));
    panelValues.setOpaque(false);
    panelValues.setLayout(new java.awt.GridLayout(3, 1));

    valueTop.setFont(new java.awt.Font("Tahoma", 0, 10));
    valueTop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    valueTop.setText("-");
    panelValues.add(valueTop);

    valueRest.setFont(new java.awt.Font("Tahoma", 0, 10));
    valueRest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    valueRest.setText("-");
    panelValues.add(valueRest);

    valueBottom.setFont(new java.awt.Font("Tahoma", 0, 10));
    valueBottom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    valueBottom.setText("-");
    panelValues.add(valueBottom);

    panelSeries.add(panelValues);

    panelMoveTo.setOpaque(false);
    panelMoveTo.setLayout(new javax.swing.BoxLayout(panelMoveTo, javax.swing.BoxLayout.Y_AXIS));

    jLabel3.setText("Move");
    panelMoveTo.add(jLabel3);

    buttonGoTop.setAction(new GoToTopAction());
    buttonGoTop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/goTop.gif"))); // NOI18N
    buttonGoTop.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMoveTo.add(buttonGoTop);

    buttonGoRest.setAction(new GoToRestAction()
    );
    buttonGoRest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/goZero.gif"))); // NOI18N
    buttonGoRest.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMoveTo.add(buttonGoRest);

    buttonGoBottom.setAction(new GoToBottomAction());
    buttonGoBottom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/goBottom.gif"))); // NOI18N
    buttonGoBottom.setMargin(new java.awt.Insets(0, 0, 0, 0));
    panelMoveTo.add(buttonGoBottom);

    panelSeries.add(panelMoveTo);

    jPanel1.setOpaque(false);
    jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

    valueRange.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
    valueRange.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    valueRange.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    valueRange.setMaximumSize(new java.awt.Dimension(32, 16));
    valueRange.setMinimumSize(new java.awt.Dimension(32, 16));
    valueRange.setPreferredSize(new java.awt.Dimension(32, 16));
    jPanel1.add(valueRange);

    labelScanDirection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/zscanUp.png"))); // NOI18N
    jPanel1.add(labelScanDirection);

    panelSeries.add(jPanel1);

    panelSections.setAlignmentX(0.0F);
    panelSections.setMinimumSize(new java.awt.Dimension(50, 134));
    panelSections.setOpaque(false);
    panelSections.setPreferredSize(new java.awt.Dimension(50, 140));

    jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10));
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("Sections");

    spinSections.setToolTipText("Number of Sections");

    jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10));
    jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel5.setText("Increment");
    jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

    spinIncrement.setToolTipText("Increment in microns");

    buttonPreview.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
    buttonPreview.setText("Preview");
    buttonPreview.setToolTipText("Preview the Z-Scan");
    buttonPreview.setAlignmentX(0.5F);
    buttonPreview.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    buttonPreview.setMargin(new java.awt.Insets(2, 2, 2, 2));
    buttonPreview.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonPreviewActionPerformed(evt);
      }
    });

    org.jdesktop.layout.GroupLayout panelSectionsLayout = new org.jdesktop.layout.GroupLayout(panelSections);
    panelSections.setLayout(panelSectionsLayout);
    panelSectionsLayout.setHorizontalGroup(
      panelSectionsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(panelSectionsLayout.createSequentialGroup()
        .add(panelSectionsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
          .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
          .add(org.jdesktop.layout.GroupLayout.TRAILING, panelSectionsLayout.createSequentialGroup()
            .addContainerGap(12, Short.MAX_VALUE)
            .add(buttonPreview, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
          .add(panelSectionsLayout.createSequentialGroup()
            .add(10, 10, 10)
            .add(spinIncrement, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
          .add(panelSectionsLayout.createSequentialGroup()
            .add(10, 10, 10)
            .add(spinSections, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))
        .addContainerGap())
    );
    panelSectionsLayout.setVerticalGroup(
      panelSectionsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(panelSectionsLayout.createSequentialGroup()
        .add(jLabel1)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(spinSections, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(jLabel5)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(spinIncrement, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
        .add(buttonPreview)
        .addContainerGap(16, Short.MAX_VALUE))
    );

    panelSeries.add(panelSections);

    buttonPrefs.setFont(new java.awt.Font("Tahoma", 0, 10));
    buttonPrefs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/preferences16.gif"))); // NOI18N
    buttonPrefs.setToolTipText("Open Settings");
    buttonPrefs.setMargin(new java.awt.Insets(2, 2, 2, 2));
    buttonPrefs.setMaximumSize(new java.awt.Dimension(24, 24));
    buttonPrefs.setMinimumSize(new java.awt.Dimension(24, 24));
    buttonPrefs.setPreferredSize(new java.awt.Dimension(24, 24));
    buttonPrefs.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonPrefsActionPerformed(evt);
      }
    });

    jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel6.setText("<html>Move<br>Increment");

    spinMoveIncrement.setToolTipText("Move increment in microns");

    buttonTest.setText("(Test)");
    buttonTest.setMargin(new java.awt.Insets(2, 4, 2, 4));
    buttonTest.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonTestActionPerformed(evt);
      }
    });

    buttonTest1.setText("(Test2)");
    buttonTest1.setMargin(new java.awt.Insets(2, 4, 2, 4));
    buttonTest1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonTest1ActionPerformed(evt);
      }
    });

    labelPosition.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    labelPosition.setText("0");

    jLabel4.setText("microns");

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(panelMove, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(labelPosition, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
          .add(jLabel6)
          .add(spinMoveIncrement, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
          .add(jLabel4))
        .add(9, 9, 9)
        .add(panelSeries, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 213, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(buttonTest1)
          .add(buttonTest)
          .add(buttonPrefs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
          .add(buttonHelp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(panelMove, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .add(layout.createSequentialGroup()
        .add(buttonTest)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(buttonTest1)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(buttonPrefs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(buttonHelp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(jLabel4)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(labelPosition)
        .add(18, 18, 18)
        .add(jLabel6)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(spinMoveIncrement, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
      .add(panelSeries, 0, 0, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

    private void buttonPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPreviewActionPerformed
      System.out.println("Preview ZScan...");
      zModel.preview();
    }//GEN-LAST:event_buttonPreviewActionPerformed

    private void buttonTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTestActionPerformed
      zModel.test();
//      if (!SwingUtilities.isEventDispatchThread()) {
//        SwingUtilities.invokeLater(new Runnable() {
//
//          public void run() {
//            zModel.test();
//          }
//        });
//      }
    }//GEN-LAST:event_buttonTestActionPerformed

    private void buttonPrefsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrefsActionPerformed
      PanelConfigStageZ config = new PanelConfigStageZ(instCtrl);
      DialogOk dialog = new DialogOk(null, "Focus/Z-Stage Settings", true);
      dialog.addPanel(config);
      StaticSwingUtils.locateCenter(dialog);
      dialog.setVisible(true);

    }//GEN-LAST:event_buttonPrefsActionPerformed

    private void buttonTest1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTest1ActionPerformed
      System.out.println("getZeroIndexPosition: " +
      zModel.getZeroIndexPosition());
    }//GEN-LAST:event_buttonTest1ActionPerformed

// <editor-fold defaultstate="collapsed" desc=" Setting Actions ">
  public class SetTopAction extends AbstractAction {

    public SetTopAction() {
      super("Set Top");
      putValue(SHORT_DESCRIPTION, "Set Top");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.setTop();
      labelScanDirection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/zscanDown.png")));
    }
  }

  public class SetBottomAction extends AbstractAction {

    public SetBottomAction() {
      super("Set Bottom");
      putValue(SHORT_DESCRIPTION, "Set Bottom");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.setBottom();
      labelScanDirection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/zscanUp.png")));
    // set the top position to bottom + increment*sections
    }
  }

  public class SetRestPointAction extends AbstractAction {

    public SetRestPointAction() {
      super("Set Rest Position");
      putValue(SHORT_DESCRIPTION, "Set Rest Position");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT, 0));
    }

    public void actionPerformed(ActionEvent e) {
      // @todo check that RestPoint is between top and bottom
      zModel.setRestPoint();
    }
  }

  public class SetZeroAction extends AbstractAction {
    // This is attached to the MarkRestPoint button...
    public SetZeroAction() {
      super("Move SetZero");
      putValue(SHORT_DESCRIPTION, "Move SetZero");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.setZero();
    }
  }
// </editor-fold>

// <editor-fold defaultstate="collapsed" desc=" GoTo & Move Actions ">
  public class GoToTopAction extends AbstractAction {

    public GoToTopAction() {
      super("GoToTop");
      putValue(SHORT_DESCRIPTION, "Go to Top");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_HOME, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.goToTop();
    }
  }

  public class GoToBottomAction extends AbstractAction {

    public GoToBottomAction() {
      super("GoToBottom");
      putValue(SHORT_DESCRIPTION, "Go to Bottom");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_END, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.goToBottom();
    }
  }

  public class GoToRestAction extends AbstractAction {

    public GoToRestAction() {
      super("GoToRest");
      putValue(SHORT_DESCRIPTION, "Go to Rest");
    //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.goToRest();
    }
  }

  public class GoToZeroAction extends AbstractAction {

    public GoToZeroAction() {
      super("Move ToZero");
      putValue(SHORT_DESCRIPTION, "Move ToZero");
    //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.goToZero();
    }
  }

  public class UpAction extends AbstractAction {

    public UpAction() {
      super("Move Up");
      putValue(SHORT_DESCRIPTION, "Move Up");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_UP, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.goUp(1);
    }
  }

  public class Up10Action extends AbstractAction {

    public Up10Action() {
      super("Move Up 10");
      putValue(SHORT_DESCRIPTION, "Move Up 10");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_PAGE_UP, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.goUp(10);
    }
  }

  public class DownAction extends AbstractAction {

    public DownAction() {
      super("Move Down");
      putValue(SHORT_DESCRIPTION, "Move Down");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.goDown(1);
    }
  }

  public class Down10Action extends AbstractAction {

    public Down10Action() {
      super("Move Down 10");
      putValue(SHORT_DESCRIPTION, "Move Down 10");
      putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_PAGE_DOWN, 0));
    }

    public void actionPerformed(ActionEvent e) {
      zModel.goDown(10);
    }
  }
// </editor-fold>
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonDown1;
  private javax.swing.JButton buttonDown10;
  private javax.swing.JButton buttonGoBottom;
  private javax.swing.JButton buttonGoRest;
  private javax.swing.JButton buttonGoTop;
  private javax.swing.JButton buttonHelp;
  private javax.swing.JButton buttonMarkBottom;
  private javax.swing.JButton buttonMarkRest;
  private javax.swing.JButton buttonMarkTop;
  private javax.swing.JButton buttonPrefs;
  private javax.swing.JButton buttonPreview;
  private javax.swing.JButton buttonTest;
  private javax.swing.JButton buttonTest1;
  private javax.swing.JButton buttonUp1;
  private javax.swing.JButton buttonUp10;
  private javax.swing.JButton buttonZeroSet;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JLabel labelPosition;
  private javax.swing.JLabel labelScanDirection;
  private javax.swing.JPanel panelMark;
  private javax.swing.JPanel panelMove;
  private javax.swing.JPanel panelMoveTo;
  private javax.swing.JPanel panelSections;
  private javax.swing.JPanel panelSeries;
  private javax.swing.JPanel panelValues;
  private javax.swing.JSpinner spinIncrement;
  private javax.swing.JSpinner spinMoveIncrement;
  private javax.swing.JSpinner spinSections;
  private javax.swing.JLabel valueBottom;
  private javax.swing.JLabel valueRange;
  private javax.swing.JLabel valueRest;
  private javax.swing.JLabel valueTop;
  // End of variables declaration//GEN-END:variables
}
