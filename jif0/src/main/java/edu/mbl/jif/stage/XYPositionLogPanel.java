/*
 * XYPositionPanel.java
 *
 * Created on September 21, 2007, 1:33 PM
 */
package edu.mbl.jif.stage;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.RenderingHints;
import java.awt.Stroke;
import javax.swing.SwingUtilities;

/**
 *
 * @author  GBH
 */
public class XYPositionLogPanel
    extends javax.swing.JPanel {

    double x;
    double y;
    private static Stroke STROKE_2 = new BasicStroke(2F);
    private static Stroke STROKE_1 = new BasicStroke(1F);
//    private static Stroke MIN_STROKE =
//            new BasicStroke(4F, BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND);
//    private static Stroke HOUR_STROKE = MIN_STROKE;
    private Dimension size = null;
    private Insets insets = new Insets(0, 0, 0, 0);

    /** Creates new form XYPositionPanel */
    public XYPositionLogPanel() {
        initComponents();
				update(0.5,0.5);
    }

    public void update(double x, double y) {
        this.x = x;
        this.y = y;
        //System.out.println("x: "+x+ ", y: " + y);
        repaint();
    }

    public void paint(Graphics graphics) {
        super.paint(graphics);

        // double angle = -2 * Math.PI - Math.atan(y/x);
        // Draw the hands
        Graphics2D g = (Graphics2D) graphics;
        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                           RenderingHints.VALUE_ANTIALIAS_ON);
        size = this.getSize(size);
        insets = getInsets(insets);
        int radius = Math.min(size.width - insets.left - insets.top,
                              size.height - insets.top - insets.bottom) / 2;
        g.translate((double) size.width / 2D, (double) size.height / 2D);
        //int vectorLength = (int) ((double)radius * Math.sqrt(x*x + y*y));
        // draw the seconds
        g.setColor(Color.red);
        g.setStroke(STROKE_2);
        //g.rotate(angle);
        //g.drawLine(0, 0, vectorLength - 6, 0);
        g.drawLine(0, 0, (int) (radius * x), (int) (radius * y));
        g.drawOval(0, 0, 3, 3);
        //g.rotate(-angle);

        // draw the perimeter
        g.setColor(Color.darkGray);
        g.setStroke(STROKE_1);
        g.drawOval(-radius + 2, -radius + 2, 2 * radius - 4, 2 * radius - 4);
        g.drawOval((int) (radius * x), (int) (radius * y), 3, 3);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
