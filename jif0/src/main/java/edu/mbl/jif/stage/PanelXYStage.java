/*
 * PanelXYStage.java
 *
 * Created on June 11, 2008, 3:46 PM
 */
package edu.mbl.jif.stage;

import edu.mbl.jif.camacq.InstrumentController;
import edu.mbl.jif.gui.dialog.DialogOkCancel;
import edu.mbl.jif.gui.util.StaticSwingUtils;

/**
 *
 * @author  GBH
 */
public class PanelXYStage
    extends javax.swing.JPanel {

    private StageXYController dirCtrl;
    private StageXYInputController inputCtrl;
    private MovePointer movePointer;
    
    /** Creates new form PanelXYStage */
    public PanelXYStage() {
        initComponents();
    }

    InstrumentController instrumentCtrl;

    public PanelXYStage(InstrumentController ctrl) {
        this.instrumentCtrl = ctrl;
        dirCtrl = (StageXYController) instrumentCtrl.getController("stageXY");
        setDirCtrl(dirCtrl);
        initComponents();
        inputCtrl = new StageXYInputController(dirCtrl);
        panelControlXY1.setDirectionalXYController(inputCtrl);
    }

    public PanelXYStage(StageXYController dirCtrl) {
        setDirCtrl(dirCtrl);
        initComponents();
        inputCtrl = new StageXYInputController(dirCtrl);
        panelControlXY1.setDirectionalXYController(inputCtrl);
        
    }

    public void setDirCtrl(StageXYController dirCtrl) {
        StageXYController oldbean = dirCtrl;
        this.dirCtrl = dirCtrl;
        propertyChangeSupport.firePropertyChange(PROP_DIRCTRL, oldbean, dirCtrl);
    }

    public static final String PROP_DIRCTRL = "dirCtrl";

    public StageXYController getDirCtrl() {
        return dirCtrl;
    }

    private java.beans.PropertyChangeSupport propertyChangeSupport = new java.beans.PropertyChangeSupport(
        this);

    @Override
    public void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
        if (propertyChangeSupport != null) {
            propertyChangeSupport.addPropertyChangeListener(listener);
        } else {
            super.addPropertyChangeListener(listener);
        }
    }

    @Override
    public void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
        propertyChangeSupport.removePropertyChangeListener(listener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {
      java.awt.GridBagConstraints gridBagConstraints;
      bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

      panelSites = new javax.swing.JPanel();
      buttonMarkSite = new javax.swing.JButton();
      buttonOpenSiteList = new javax.swing.JButton();
      panelTargetBkgd = new javax.swing.JPanel();
      buttonSetTarget = new javax.swing.JButton();
      buttonReturnTarget = new javax.swing.JButton();
      buttonSetBkgdSite = new javax.swing.JButton();
      buttonReturnBkgdSite = new javax.swing.JButton();
      panelControlXY1 = new edu.mbl.jif.gui.spatial.PanelControlXY();
      buttonStop = new javax.swing.JButton();
      panelVelocityIncrement = new javax.swing.JPanel();
      jLabel3 = new javax.swing.JLabel();
      spinnerVelocity = new javax.swing.JSpinner();
      jLabel4 = new javax.swing.JLabel();
      jSpinner1 = new javax.swing.JSpinner();
      panelPosition = new javax.swing.JPanel();
      valueX = new javax.swing.JLabel();
      valueY = new javax.swing.JLabel();
      buttonPrefs = new javax.swing.JButton();
      toggleScreenPoint = new javax.swing.JToggleButton();

      setBackground(new java.awt.Color(220, 222, 191));

      panelSites.setBorder(javax.swing.BorderFactory.createTitledBorder("Sites"));
      panelSites.setOpaque(false);
      panelSites.setLayout(new javax.swing.BoxLayout(panelSites, javax.swing.BoxLayout.Y_AXIS));

      buttonMarkSite.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
      buttonMarkSite.setToolTipText("Mark current position");
      buttonMarkSite.setAlignmentX(0.5F);
      buttonMarkSite.setEnabled(false);
      buttonMarkSite.setLabel("Add");
      buttonMarkSite.setMargin(new java.awt.Insets(0, 0, 0, 0));
      buttonMarkSite.setMaximumSize(new java.awt.Dimension(24, 24));
      buttonMarkSite.setMinimumSize(new java.awt.Dimension(24, 24));
      buttonMarkSite.setPreferredSize(new java.awt.Dimension(24, 24));
      buttonMarkSite.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonMarkSiteActionPerformed(evt);
         }
      });
      panelSites.add(buttonMarkSite);

      buttonOpenSiteList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/list.gif"))); // NOI18N
      buttonOpenSiteList.setToolTipText("Show Position List");
      buttonOpenSiteList.setAlignmentX(0.5F);
      buttonOpenSiteList.setEnabled(false);
      buttonOpenSiteList.setMargin(new java.awt.Insets(0, 0, 0, 0));
      buttonOpenSiteList.setMaximumSize(new java.awt.Dimension(24, 24));
      buttonOpenSiteList.setMinimumSize(new java.awt.Dimension(24, 24));
      buttonOpenSiteList.setPreferredSize(new java.awt.Dimension(24, 24));
      panelSites.add(buttonOpenSiteList);

      panelTargetBkgd.setLayout(new java.awt.GridLayout(2, 2, 1, 1));

      buttonSetTarget.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/target24.gif"))); // NOI18N
      buttonSetTarget.setToolTipText("Set Target Site");
      buttonSetTarget.setMargin(new java.awt.Insets(0, 0, 0, 0));
      buttonSetTarget.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonSetTargetActionPerformed(evt);
         }
      });
      panelTargetBkgd.add(buttonSetTarget);

      buttonReturnTarget.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/target24return.gif"))); // NOI18N
      buttonReturnTarget.setToolTipText("Return to Target Site");
      buttonReturnTarget.setMargin(new java.awt.Insets(0, 0, 0, 0));
      buttonReturnTarget.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonReturnTargetActionPerformed(evt);
         }
      });
      panelTargetBkgd.add(buttonReturnTarget);

      buttonSetBkgdSite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/bkgdSet.gif"))); // NOI18N
      buttonSetBkgdSite.setToolTipText("Set Background Site");
      buttonSetBkgdSite.setMargin(new java.awt.Insets(0, 0, 0, 0));
      buttonSetBkgdSite.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonSetBkgdSiteActionPerformed(evt);
         }
      });
      panelTargetBkgd.add(buttonSetBkgdSite);

      buttonReturnBkgdSite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/bkgdReturn.gif"))); // NOI18N
      buttonReturnBkgdSite.setToolTipText("Return to Background Site");
      buttonReturnBkgdSite.setMargin(new java.awt.Insets(0, 0, 0, 0));
      buttonReturnBkgdSite.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonReturnBkgdSiteActionPerformed(evt);
         }
      });
      panelTargetBkgd.add(buttonReturnBkgdSite);

      buttonStop.setBackground(new java.awt.Color(255, 153, 153));
      buttonStop.setText("Stop");
      buttonStop.setMargin(new java.awt.Insets(0, 0, 0, 0));
      buttonStop.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonStopActionPerformed(evt);
         }
      });

      panelVelocityIncrement.setOpaque(false);
      panelVelocityIncrement.setLayout(new java.awt.GridBagLayout());

      jLabel3.setText("Velocity, mm/s");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
      panelVelocityIncrement.add(jLabel3, gridBagConstraints);

      spinnerVelocity.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
      spinnerVelocity.setEditor(new javax.swing.JSpinner.NumberEditor(spinnerVelocity, ""));
      spinnerVelocity.setPreferredSize(new java.awt.Dimension(50, 18));

      org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${dirCtrl.velocity}"), spinnerVelocity, org.jdesktop.beansbinding.BeanProperty.create("value"));
      bindingGroup.addBinding(binding);

      panelVelocityIncrement.add(spinnerVelocity, new java.awt.GridBagConstraints());

      jLabel4.setText("Increment, um");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      panelVelocityIncrement.add(jLabel4, gridBagConstraints);

      jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
      jSpinner1.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinner1, "0.0"));
      jSpinner1.setMaximumSize(new java.awt.Dimension(50, 32767));
      jSpinner1.setPreferredSize(new java.awt.Dimension(50, 18));

      binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${dirCtrl.increment}"), jSpinner1, org.jdesktop.beansbinding.BeanProperty.create("value"));
      bindingGroup.addBinding(binding);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 1;
      panelVelocityIncrement.add(jSpinner1, gridBagConstraints);

      panelPosition.setBorder(javax.swing.BorderFactory.createEtchedBorder());
      panelPosition.setOpaque(false);
      panelPosition.setLayout(new javax.swing.BoxLayout(panelPosition, javax.swing.BoxLayout.X_AXIS));

      valueX.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
      valueX.setMaximumSize(new java.awt.Dimension(50, 18));
      valueX.setMinimumSize(new java.awt.Dimension(50, 18));
      valueX.setPreferredSize(new java.awt.Dimension(50, 18));

      binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${dirCtrl.x}"), valueX, org.jdesktop.beansbinding.BeanProperty.create("text"));
      bindingGroup.addBinding(binding);

      panelPosition.add(valueX);

      valueY.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
      valueY.setMaximumSize(new java.awt.Dimension(50, 18));
      valueY.setMinimumSize(new java.awt.Dimension(50, 18));
      valueY.setPreferredSize(new java.awt.Dimension(50, 18));

      binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${dirCtrl.y}"), valueY, org.jdesktop.beansbinding.BeanProperty.create("text"));
      bindingGroup.addBinding(binding);

      panelPosition.add(valueY);

      buttonPrefs.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
      buttonPrefs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/preferences16.gif"))); // NOI18N
      buttonPrefs.setToolTipText("Settings");
      buttonPrefs.setMargin(new java.awt.Insets(2, 2, 2, 2));
      buttonPrefs.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonPrefsActionPerformed(evt);
         }
      });

      toggleScreenPoint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/stage/icons/screenPoint.png"))); // NOI18N
      toggleScreenPoint.setToolTipText("ScreenPoint Movement mode");
      toggleScreenPoint.setMargin(new java.awt.Insets(0, 0, 0, 0));
      toggleScreenPoint.addItemListener(new java.awt.event.ItemListener() {
         public void itemStateChanged(java.awt.event.ItemEvent evt) {
            toggleScreenPointItemStateChanged(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(6, 6, 6)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGap(94, 94, 94)
                  .addComponent(panelVelocityIncrement, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(layout.createSequentialGroup()
                  .addComponent(panelPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(10, 10, 10)
                  .addComponent(buttonStop, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(20, 20, 20)
                  .addComponent(toggleScreenPoint))
               .addComponent(panelControlXY1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(7, 7, 7)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(panelTargetBkgd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGroup(layout.createSequentialGroup()
                  .addGap(33, 33, 33)
                  .addComponent(buttonPrefs, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(10, 10, 10)
            .addComponent(panelSites, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(6, 6, 6)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGap(4, 4, 4)
                  .addComponent(panelVelocityIncrement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(34, 34, 34)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(toggleScreenPoint)
                     .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(panelPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(buttonStop)))))
               .addComponent(panelControlXY1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
         .addGroup(layout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(panelTargetBkgd, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(10, 10, 10)
            .addComponent(buttonPrefs, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
         .addComponent(panelSites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      );

      bindingGroup.bind();
   }// </editor-fold>//GEN-END:initComponents

private void buttonSetTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSetTargetActionPerformed
    dirCtrl.setTarget();
}//GEN-LAST:event_buttonSetTargetActionPerformed

private void buttonReturnTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReturnTargetActionPerformed
    dirCtrl.returnToTarget();
}//GEN-LAST:event_buttonReturnTargetActionPerformed

private void buttonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStopActionPerformed
    dirCtrl.stop();
}//GEN-LAST:event_buttonStopActionPerformed

private void buttonSetBkgdSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSetBkgdSiteActionPerformed
    dirCtrl.setBkgdSite();
}//GEN-LAST:event_buttonSetBkgdSiteActionPerformed

private void buttonReturnBkgdSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReturnBkgdSiteActionPerformed
    dirCtrl.returnToBkgdSite();
}//GEN-LAST:event_buttonReturnBkgdSiteActionPerformed

private void buttonPrefsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrefsActionPerformed
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        DialogOkCancel dialog = new DialogOkCancel(new javax.swing.JFrame(), "XY Stage Settings", true);
        dialog.addPanel(new PanelConfigStageXY());
        dialog.setVisible(true);
      }
    });}//GEN-LAST:event_buttonPrefsActionPerformed

private void buttonMarkSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMarkSiteActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_buttonMarkSiteActionPerformed

private void toggleScreenPointItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_toggleScreenPointItemStateChanged
    if(movePointer == null) {
        // get DisplayLive
        movePointer = new MovePointer();
    }
    movePointer.toggleMovePointer(toggleScreenPoint.isSelected());
}//GEN-LAST:event_toggleScreenPointItemStateChanged

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton buttonMarkSite;
   private javax.swing.JButton buttonOpenSiteList;
   private javax.swing.JButton buttonPrefs;
   private javax.swing.JButton buttonReturnBkgdSite;
   private javax.swing.JButton buttonReturnTarget;
   private javax.swing.JButton buttonSetBkgdSite;
   private javax.swing.JButton buttonSetTarget;
   private javax.swing.JButton buttonStop;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JSpinner jSpinner1;
   private edu.mbl.jif.gui.spatial.PanelControlXY panelControlXY1;
   private javax.swing.JPanel panelPosition;
   private javax.swing.JPanel panelSites;
   private javax.swing.JPanel panelTargetBkgd;
   private javax.swing.JPanel panelVelocityIncrement;
   private javax.swing.JSpinner spinnerVelocity;
   private javax.swing.JToggleButton toggleScreenPoint;
   private javax.swing.JLabel valueX;
   private javax.swing.JLabel valueY;
   private org.jdesktop.beansbinding.BindingGroup bindingGroup;
   // End of variables declaration//GEN-END:variables
}
