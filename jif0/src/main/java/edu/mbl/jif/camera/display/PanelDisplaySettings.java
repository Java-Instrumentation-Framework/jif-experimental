/*
 * PanelDisplaySettings.java
 *
 * Created on June 1, 2006, 5:21 PM
 */
package edu.mbl.jif.camera.display;

import edu.mbl.jif.camera.display.DisplayModel;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;

/**
 * Control panel for image display
 * @author  GBH
 */
public class PanelDisplaySettings
    extends javax.swing.JPanel {

    edu.mbl.jif.workframe.AbstractApplicationController appCtrl;
    private PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);

    public PanelDisplaySettings()
      {
        initComponents();
      }

    public PanelDisplaySettings(edu.mbl.jif.workframe.AbstractApplicationController appCtrl)
      {
        this.appCtrl = appCtrl;
        setDisplayModel((DisplayModel) (appCtrl.getModel("display")));
        initComponents();
      }

    protected DisplayModel displayModel;
    public static final String PROP_DISPLAYMODEL = "displayModel";

    /**
     * Get the value of displayModel
     *
     * @return the value of displayModel
     */
    public DisplayModel getDisplayModel()
      {
        return displayModel;
      }

    /**
     * Set the value of displayModel
     *
     * @param displayModel new value of displayModel
     */
    public void setDisplayModel(DisplayModel displayModel)
      {
        DisplayModel oldDisplayModel = this.displayModel;
        this.displayModel = displayModel;
        propertyChangeSupport.firePropertyChange(PROP_DISPLAYMODEL, oldDisplayModel, displayModel);
      }

    // <editor-fold defaultstate="collapsed" desc=">>>--- PropChangeSupport  ---<<<" >
    /**
     * Add PropertyChangeListener.
     *
     * @param listener
     */
    public void addPropertyChangeListener(PropertyChangeListener listener)
      {
        if (propertyChangeSupport != null) {
            propertyChangeSupport.addPropertyChangeListener(listener);
        } else {
            super.addPropertyChangeListener(listener);
        }
      }

    /**
     * Remove PropertyChangeListener.
     *
     * @param listener
     */
    public void removePropertyChangeListener(PropertyChangeListener listener)
      {
        propertyChangeSupport.removePropertyChangeListener(listener);
      }
// </editor-fold>
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panelAdjust = new javax.swing.JPanel();
        toggleEqualize = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        buttonContrast = new javax.swing.JButton();
        panelHistogram = new javax.swing.JPanel();
        buttonHistogram = new javax.swing.JButton();
        buttonMeasure = new javax.swing.JButton();
        panelShowPixels = new javax.swing.JPanel();
        checkHighlightSaturated = new javax.swing.JCheckBox();
        checkHighlightZero = new javax.swing.JCheckBox();
        spinFullPixelValue = new javax.swing.JSpinner();
        spinEmptyPixelValue = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(217, 217, 244));
        setPreferredSize(new java.awt.Dimension(500, 120));

        panelAdjust.setBorder(javax.swing.BorderFactory.createTitledBorder("Adjust"));
        panelAdjust.setOpaque(false);

        toggleEqualize.setText("Equalize");
        toggleEqualize.setToolTipText("Equalize Histogram in Display");
        toggleEqualize.setMargin(new java.awt.Insets(2, 4, 2, 4));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${displayModel.equalizeHistogram}"), toggleEqualize, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        buttonContrast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/camera/icons/contrast.png"))); // NOI18N
        buttonContrast.setAlignmentX(0.5F);
        buttonContrast.setMargin(new java.awt.Insets(2, 4, 2, 4));

        org.jdesktop.layout.GroupLayout panelHistogramLayout = new org.jdesktop.layout.GroupLayout(panelHistogram);
        panelHistogram.setLayout(panelHistogramLayout);
        panelHistogramLayout.setHorizontalGroup(
            panelHistogramLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 150, Short.MAX_VALUE)
        );
        panelHistogramLayout.setVerticalGroup(
            panelHistogramLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 54, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout panelAdjustLayout = new org.jdesktop.layout.GroupLayout(panelAdjust);
        panelAdjust.setLayout(panelAdjustLayout);
        panelAdjustLayout.setHorizontalGroup(
            panelAdjustLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelAdjustLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelAdjustLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(buttonContrast)
                    .add(toggleEqualize))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelAdjustLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(panelHistogram, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelAdjustLayout.setVerticalGroup(
            panelAdjustLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelAdjustLayout.createSequentialGroup()
                .add(panelAdjustLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, panelHistogram, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, panelAdjustLayout.createSequentialGroup()
                        .add(buttonContrast)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(toggleEqualize)))
                .add(17, 17, 17)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        buttonHistogram.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/camera/icons/histogram16.jpg"))); // NOI18N
        buttonHistogram.setText("Histogram");
        buttonHistogram.setMargin(new java.awt.Insets(2, 2, 2, 2));

        buttonMeasure.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/mbl/jif/camera/icons/oscilloscope.png"))); // NOI18N
        buttonMeasure.setText("Measure");
        buttonMeasure.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        buttonMeasure.setMargin(new java.awt.Insets(2, 2, 2, 2));

        panelShowPixels.setBorder(javax.swing.BorderFactory.createTitledBorder("Highlight Pixels"));
        panelShowPixels.setOpaque(false);

        checkHighlightSaturated.setFont(new java.awt.Font("Tahoma", 0, 10));
        checkHighlightSaturated.setText("Saturated");
        checkHighlightSaturated.setOpaque(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${displayModel.showPixelsSaturated}"), checkHighlightSaturated, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkHighlightZero.setFont(new java.awt.Font("Tahoma", 0, 10));
        checkHighlightZero.setText("Zero");
        checkHighlightZero.setOpaque(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${displayModel.showPixelsZero}"), checkHighlightZero, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        spinFullPixelValue.setModel(new javax.swing.SpinnerNumberModel());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${displayModel.fullPixelValue}"), spinFullPixelValue, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        spinEmptyPixelValue.setModel(new javax.swing.SpinnerNumberModel());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${displayModel.emptyPixelValue}"), spinEmptyPixelValue, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        org.jdesktop.layout.GroupLayout panelShowPixelsLayout = new org.jdesktop.layout.GroupLayout(panelShowPixels);
        panelShowPixels.setLayout(panelShowPixelsLayout);
        panelShowPixelsLayout.setHorizontalGroup(
            panelShowPixelsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelShowPixelsLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelShowPixelsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(checkHighlightSaturated)
                    .add(checkHighlightZero, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                .add(panelShowPixelsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panelShowPixelsLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(spinFullPixelValue, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, panelShowPixelsLayout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(spinEmptyPixelValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelShowPixelsLayout.setVerticalGroup(
            panelShowPixelsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelShowPixelsLayout.createSequentialGroup()
                .add(panelShowPixelsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(checkHighlightSaturated)
                    .add(spinFullPixelValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(panelShowPixelsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(spinEmptyPixelValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(checkHighlightZero)))
        );

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 11));
        jLabel1.setText("Display");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, buttonMeasure, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, buttonHistogram, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelAdjust, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelShowPixels, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonHistogram)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonMeasure))
                    .add(panelAdjust, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(panelShowPixels, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonContrast;
    private javax.swing.JButton buttonHistogram;
    private javax.swing.JButton buttonMeasure;
    private javax.swing.JCheckBox checkHighlightSaturated;
    private javax.swing.JCheckBox checkHighlightZero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panelAdjust;
    private javax.swing.JPanel panelHistogram;
    private javax.swing.JPanel panelShowPixels;
    private javax.swing.JSpinner spinEmptyPixelValue;
    private javax.swing.JSpinner spinFullPixelValue;
    private javax.swing.JToggleButton toggleEqualize;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
